"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_test_helpers_1 = require("console-test-helpers");
const fixture_assertions_1 = require("./fixture-assertions");
let fixtureCache;
function setupMockConsole(hooks, options) {
    let resetConsole;
    let consoleState;
    setupFixtureCache(options.fixturePath);
    hooks.beforeEach(function () {
        ({ resetConsole, consoleState } = console_test_helpers_1.mockConsole(options));
    });
    hooks.afterEach(function () {
        resetConsole();
    });
    QUnit.assert.console = function () {
        return new fixture_assertions_1.default(fixtureCache, consoleState, this);
    };
}
exports.setupMockConsole = setupMockConsole;
function setupFixtureCache(fixturePath) {
    if (typeof fixturePath === undefined) {
        fixtureCache = new console_test_helpers_1.FixtureCache(fixturePath);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBbUc7QUFDbkcsNkRBQXFEO0FBT3JELElBQUksWUFBMEIsQ0FBQztBQUUvQixTQUFnQixnQkFBZ0IsQ0FBQyxLQUFrQixFQUFFLE9BQTJCO0lBQzlFLElBQUksWUFBd0IsQ0FBQztJQUM3QixJQUFJLFlBQTBCLENBQUM7SUFFL0IsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBRXZDLEtBQUssQ0FBQyxVQUFVLENBQUM7UUFDZixDQUFDLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxHQUFHLGtDQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUMxRCxDQUFDLENBQUMsQ0FBQztJQUVILEtBQUssQ0FBQyxTQUFTLENBQUM7UUFDZCxZQUFZLEVBQUUsQ0FBQztJQUNqQixDQUFDLENBQUMsQ0FBQztJQUVhLEtBQUssQ0FBQyxNQUFPLENBQUMsT0FBTyxHQUFHO1FBQ3RDLE9BQU8sSUFBSSw0QkFBaUIsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pFLENBQUMsQ0FBQztBQUNKLENBQUM7QUFqQkQsNENBaUJDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxXQUFtQjtJQUM1QyxJQUFJLE9BQU8sV0FBVyxLQUFLLFNBQVMsRUFBRTtRQUNwQyxZQUFZLEdBQUcsSUFBSSxtQ0FBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQzlDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1vY2tDb25zb2xlLCBGaXh0dXJlQ2FjaGUsIENvbnNvbGVTdGF0ZSwgTW9ja0NvbnNvbGVPcHRpb25zIH0gZnJvbSAnY29uc29sZS10ZXN0LWhlbHBlcnMnO1xuaW1wb3J0IEZpeHR1cmVBc3NlcnRpb25zIGZyb20gJy4vZml4dHVyZS1hc3NlcnRpb25zJztcblxuaW50ZXJmYWNlIENvbnNvbGVPYmplY3Qge1xuICBjb25zb2xlOiAoKSA9PiBGaXh0dXJlQXNzZXJ0aW9ucztcbn1cbmludGVyZmFjZSBDb25zb2xlQXNzZXJ0IGV4dGVuZHMgQXNzZXJ0LCBDb25zb2xlT2JqZWN0IHt9XG5cbmxldCBmaXh0dXJlQ2FjaGU6IEZpeHR1cmVDYWNoZTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwTW9ja0NvbnNvbGUoaG9va3M6IE5lc3RlZEhvb2tzLCBvcHRpb25zOiBNb2NrQ29uc29sZU9wdGlvbnMpIHtcbiAgbGV0IHJlc2V0Q29uc29sZTogKCkgPT4gdm9pZDtcbiAgbGV0IGNvbnNvbGVTdGF0ZTogQ29uc29sZVN0YXRlO1xuXG4gIHNldHVwRml4dHVyZUNhY2hlKG9wdGlvbnMuZml4dHVyZVBhdGgpO1xuXG4gIGhvb2tzLmJlZm9yZUVhY2goZnVuY3Rpb24oKSB7XG4gICAgKHsgcmVzZXRDb25zb2xlLCBjb25zb2xlU3RhdGUgfSA9IG1vY2tDb25zb2xlKG9wdGlvbnMpKTtcbiAgfSk7XG5cbiAgaG9va3MuYWZ0ZXJFYWNoKGZ1bmN0aW9uKCkge1xuICAgIHJlc2V0Q29uc29sZSgpO1xuICB9KTtcblxuICAoPENvbnNvbGVBc3NlcnQ+UVVuaXQuYXNzZXJ0KS5jb25zb2xlID0gZnVuY3Rpb24oKTogRml4dHVyZUFzc2VydGlvbnMge1xuICAgIHJldHVybiBuZXcgRml4dHVyZUFzc2VydGlvbnMoZml4dHVyZUNhY2hlLCBjb25zb2xlU3RhdGUsIHRoaXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzZXR1cEZpeHR1cmVDYWNoZShmaXh0dXJlUGF0aDogc3RyaW5nKSB7XG4gIGlmICh0eXBlb2YgZml4dHVyZVBhdGggPT09IHVuZGVmaW5lZCkge1xuICAgIGZpeHR1cmVDYWNoZSA9IG5ldyBGaXh0dXJlQ2FjaGUoZml4dHVyZVBhdGgpO1xuICB9XG59XG4iXX0=